From 9eaa92e3e6812ad134f2ee1d0655f39486989921 Mon Sep 17 00:00:00 2001
From: Jacob Becker <jacob.becker@kitware.com>
Date: Wed, 28 May 2014 16:47:42 -0400
Subject: [PATCH] fix several build errors and warnings on windows

---
 remus/common/ConditionalStorage.h                  |  4 ++++
 remus/common/FileHandle.h                          |  2 ++
 remus/common/MeshRegistrar.h                       | 12 ++++++++----
 remus/common/PollingMonitor.cxx                    |  6 +++---
 remus/common/PollingMonitor.h                      | 10 +++++++---
 remus/common/testing/UnitTestExecuteProcess.cxx    |  2 +-
 remus/common/testing/UnitTestPollingMonitor.cxx    |  2 +-
 remus/proto/Job.h                                  | 10 +++++++---
 remus/proto/JobResult.cxx                          | 10 +++++++---
 remus/proto/JobStatus.h                            | 10 +++++++---
 remus/proto/testing/UnitTestJobRequirements.cxx    |  4 ++--
 remus/proto/testing/UnitTestJobSubmission.cxx      |  2 +-
 remus/server/Server.cxx                            | 16 ++++++++++------
 remus/server/Server.h                              | 10 +++++++---
 remus/server/detail/SocketMonitor.cxx              |  2 +-
 remus/server/detail/testing/UnitTestActiveJobs.cxx |  4 ++++
 remus/server/detail/testing/UnitTestWorkerPool.cxx |  4 ++++
 remus/server/detail/uuidHelper.h                   | 10 +++++++---
 remus/testing/Testing.h                            | 12 ++++++++----
 remus/worker/Job.h                                 | 10 +++++++---
 remus/worker/Worker.cxx                            | 12 ++++++------
 remus/worker/detail/JobQueue.cxx                   | 10 +++++++---
 22 files changed, 111 insertions(+), 53 deletions(-)

diff --git a/remus/common/ConditionalStorage.h b/remus/common/ConditionalStorage.h
index 041ae44..ee1b0c4 100644
--- a/remus/common/ConditionalStorage.h
+++ b/remus/common/ConditionalStorage.h
@@ -36,7 +36,11 @@ struct ConditionalStorage
   if(this->Size > 0)
     {
     this->Space = boost::shared_array<char>( new char[this->Size] );
+#ifdef WIN32
+    memcpy(this->Space.get(),&t[0],t.size());
+#else
     memcpy(this->Space.get(),t.data(),t.size());
+#endif
     }
   }
 
diff --git a/remus/common/FileHandle.h b/remus/common/FileHandle.h
index 47762d2..ac0e1b4 100644
--- a/remus/common/FileHandle.h
+++ b/remus/common/FileHandle.h
@@ -28,6 +28,8 @@ struct FileHandle
   std::size_t size() const { return Path.size(); }
   const char* data() const { return Path.data(); }
 
+  const char& operator[](std::size_t at) const{ return Path[at]; }
+
   const std::string& path() const{ return Path; }
 private:
   std::string Path;
diff --git a/remus/common/MeshRegistrar.h b/remus/common/MeshRegistrar.h
index 8cf6249..b84679f 100644
--- a/remus/common/MeshRegistrar.h
+++ b/remus/common/MeshRegistrar.h
@@ -13,16 +13,20 @@
 #define remus_common_MeshRegistrar_h
 
 #include <string>
+#include <set>
 
 //suppress warnings inside boost headers for gcc and clang
 //as clang supports pragma GCC diagnostic
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wcast-align"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wcast-align"
+#endif
 #include <boost/cstdint.hpp>
 #include <boost/unordered_map.hpp>
 #include <boost/shared_ptr.hpp>
-#pragma GCC diagnostic pop
-
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <remus/common/CommonExports.h>
 
diff --git a/remus/common/PollingMonitor.cxx b/remus/common/PollingMonitor.cxx
index 801ea0e..c3d0762 100644
--- a/remus/common/PollingMonitor.cxx
+++ b/remus/common/PollingMonitor.cxx
@@ -90,7 +90,7 @@ public:
       }
     else
       {
-      long mil_secs = avg.total_milliseconds() * 0.25;
+      long mil_secs = static_cast<long>(avg.total_milliseconds() * 0.25);
       this->CurrentPollRate = avg + milliseconds(mil_secs);
       if(this->CurrentPollRate > this->MaxTimeOut)
         {
@@ -167,13 +167,13 @@ PollingMonitor::~PollingMonitor()
 }
 
 //------------------------------------------------------------------------------
-uint32_t PollingMonitor::minTimeOut() const
+boost::uint32_t PollingMonitor::minTimeOut() const
 {
   return this->Tracker->minTimeOut().total_seconds();
 }
 
 //------------------------------------------------------------------------------
-uint32_t PollingMonitor::maxTimeOut() const
+boost::uint32_t PollingMonitor::maxTimeOut() const
 {
   return this->Tracker->maxTimeOut().total_seconds();
 }
diff --git a/remus/common/PollingMonitor.h b/remus/common/PollingMonitor.h
index f5c5b8d..4c3e483 100644
--- a/remus/common/PollingMonitor.h
+++ b/remus/common/PollingMonitor.h
@@ -13,11 +13,15 @@
 #ifndef remus_common_PollingMonitor_h
 #define remus_common_PollingMonitor_h
 
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wcast-align"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wcast-align"
+#endif
 #include <boost/cstdint.hpp>
 #include <boost/shared_ptr.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <remus/common/CommonExports.h>
 
diff --git a/remus/common/testing/UnitTestExecuteProcess.cxx b/remus/common/testing/UnitTestExecuteProcess.cxx
index bb516bd..fde53b3 100644
--- a/remus/common/testing/UnitTestExecuteProcess.cxx
+++ b/remus/common/testing/UnitTestExecuteProcess.cxx
@@ -16,7 +16,7 @@
 
 #ifdef _WIN32
 #  include "windows.h"
-#  defind usleep(X) Sleep((X))
+#  define usleep(X) Sleep((X))
 #else
 #  include <unistd.h>
 #endif
diff --git a/remus/common/testing/UnitTestPollingMonitor.cxx b/remus/common/testing/UnitTestPollingMonitor.cxx
index 64052e8..92f0711 100644
--- a/remus/common/testing/UnitTestPollingMonitor.cxx
+++ b/remus/common/testing/UnitTestPollingMonitor.cxx
@@ -158,7 +158,7 @@ void verify_slow_polling()
   {
   boost::int64_t previous_current = p.current();
   boost::int64_t previous_average = p.average();
-  t += boost::posix_time::seconds(p.current());
+  t += boost::posix_time::seconds(static_cast<long>(p.current()));
   p.pollOccurredAt(&t);
 
   REMUS_ASSERT ( (p.current( ) >= previous_current ) );
diff --git a/remus/proto/Job.h b/remus/proto/Job.h
index 6952d1a..e995916 100644
--- a/remus/proto/Job.h
+++ b/remus/proto/Job.h
@@ -20,10 +20,14 @@
 #include <boost/uuid/uuid.hpp>
 
 //suppress warnings inside boost headers for gcc and clang
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/uuid/uuid_io.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <remus/common/MeshIOType.h>
 
diff --git a/remus/proto/JobResult.cxx b/remus/proto/JobResult.cxx
index a6dff86..a78e762 100644
--- a/remus/proto/JobResult.cxx
+++ b/remus/proto/JobResult.cxx
@@ -15,10 +15,14 @@
 #include <remus/proto/conversionHelpers.h>
 
 //suppress warnings inside boost headers for gcc and clang
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/uuid/uuid_io.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <iostream>
 
diff --git a/remus/proto/JobStatus.h b/remus/proto/JobStatus.h
index b619fe9..ee76bdb 100644
--- a/remus/proto/JobStatus.h
+++ b/remus/proto/JobStatus.h
@@ -20,10 +20,14 @@
 #include <boost/uuid/uuid.hpp>
 
 //suppress warnings inside boost headers for gcc and clang
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/uuid/uuid_io.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <remus/common/remusGlobals.h>
 #include <remus/proto/conversionHelpers.h>
diff --git a/remus/proto/testing/UnitTestJobRequirements.cxx b/remus/proto/testing/UnitTestJobRequirements.cxx
index b69f562..add8be3 100644
--- a/remus/proto/testing/UnitTestJobRequirements.cxx
+++ b/remus/proto/testing/UnitTestJobRequirements.cxx
@@ -28,7 +28,7 @@ int randomInt(int min_v, int max_v)
 {
   const float random = ((float)std::rand()/(float)RAND_MAX);
   const std::size_t diff = (max_v - min_v);
-  return min_v + (random * diff);
+  return static_cast<int>(min_v + (random * diff));
 }
 
 
@@ -278,7 +278,7 @@ void verify_req_set()
 int UnitTestJobRequirements(int, char *[])
 {
   //setup the random number generator
-  std::srand(std::time(0));
+  std::srand(static_cast<unsigned int>(std::time(0)));
 
   verify_tag();
   verify_worker_name();
diff --git a/remus/proto/testing/UnitTestJobSubmission.cxx b/remus/proto/testing/UnitTestJobSubmission.cxx
index 2cf6b2e..c47c429 100644
--- a/remus/proto/testing/UnitTestJobSubmission.cxx
+++ b/remus/proto/testing/UnitTestJobSubmission.cxx
@@ -21,7 +21,7 @@ int randomInt(int min_v, int max_v)
 {
   const float random = ((float)std::rand()/(float)RAND_MAX);
   const std::size_t diff = (max_v - min_v);
-  return min_v + (random * diff);
+  return static_cast<int>(min_v + (random * diff));
 }
 
 
diff --git a/remus/server/Server.cxx b/remus/server/Server.cxx
index a9de9eb..532c6d7 100644
--- a/remus/server/Server.cxx
+++ b/remus/server/Server.cxx
@@ -12,10 +12,14 @@
 
 #include <remus/server/Server.h>
 
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/thread.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <boost/thread/locks.hpp>
 #include <boost/uuid/uuid.hpp>
@@ -192,7 +196,7 @@ namespace server{
 //------------------------------------------------------------------------------
 Server::Server():
   PortInfo(),
-  Zmq(new detail::ZmqManagement( this->PortInfo ) ),
+  Zmq(new detail::ZmqManagement( PortInfo )),
   UUIDGenerator(), //use default random number generator
   QueuedJobs(new remus::server::detail::JobQueue() ),
   SocketMonitor(new remus::server::detail::SocketMonitor() ),
@@ -211,7 +215,7 @@ Server::Server():
 //------------------------------------------------------------------------------
 Server::Server(const remus::server::WorkerFactory& factory):
   PortInfo(),
-  Zmq(new detail::ZmqManagement( this->PortInfo ) ),
+  Zmq(new detail::ZmqManagement( PortInfo )),
   UUIDGenerator(), //use default random number generator
   QueuedJobs(new remus::server::detail::JobQueue() ),
   SocketMonitor(new remus::server::detail::SocketMonitor() ),
@@ -300,7 +304,7 @@ bool Server::brokering(Server::SignalHandling sh)
   boost::int64_t timeToCheckForDeadWorkers = 0; //check every 250ms
   while (Thread->isBrokering())
     {
-    zmq::poll(&items[0], 2, monitor.current()*1000);
+    zmq::poll(&items[0], 2, static_cast<long>(monitor.current()*1000));
     timeToCheckForDeadWorkers += monitor.durationOfTheLastPollMilliseconds();
     monitor.pollOccurred();
 
diff --git a/remus/server/Server.h b/remus/server/Server.h
index 34573aa..42e0b6d 100644
--- a/remus/server/Server.h
+++ b/remus/server/Server.h
@@ -17,10 +17,14 @@
 #include <remus/proto/zmqSocketIdentity.h>
 
 #include <boost/scoped_ptr.hpp>
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/uuid/random_generator.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <remus/server/WorkerFactory.h>
 #include <remus/server/ServerPorts.h>
diff --git a/remus/server/detail/SocketMonitor.cxx b/remus/server/detail/SocketMonitor.cxx
index b5f1f0a..d6d961f 100644
--- a/remus/server/detail/SocketMonitor.cxx
+++ b/remus/server/detail/SocketMonitor.cxx
@@ -61,7 +61,7 @@ public:
   }
 
   //----------------------------------------------------------------------------
-  void heartbeat( const zmq::SocketIdentity& socket, int64_t dur )
+  void heartbeat( const zmq::SocketIdentity& socket, boost::int64_t dur )
   {
     //insert a new item if it doesn't exist, otherwise get the beatInfo already
     //in the map
diff --git a/remus/server/detail/testing/UnitTestActiveJobs.cxx b/remus/server/detail/testing/UnitTestActiveJobs.cxx
index 3b02edc..7267c01 100644
--- a/remus/server/detail/testing/UnitTestActiveJobs.cxx
+++ b/remus/server/detail/testing/UnitTestActiveJobs.cxx
@@ -14,6 +14,10 @@
 #include <remus/testing/Testing.h>
 #include <remus/server/detail/ActiveJobs.h>
 
+#ifdef _WIN32
+#include <windows.h>
+#endif
+
 namespace {
 
 
diff --git a/remus/server/detail/testing/UnitTestWorkerPool.cxx b/remus/server/detail/testing/UnitTestWorkerPool.cxx
index b773a27..67a28dc 100644
--- a/remus/server/detail/testing/UnitTestWorkerPool.cxx
+++ b/remus/server/detail/testing/UnitTestWorkerPool.cxx
@@ -15,6 +15,10 @@
 #include <remus/server/detail/uuidHelper.h>
 #include <remus/testing/Testing.h>
 
+#ifdef _WIN32
+#include <windows.h>
+#endif
+
 namespace {
 
 using namespace remus::common;
diff --git a/remus/server/detail/uuidHelper.h b/remus/server/detail/uuidHelper.h
index e6ec517..d25be00 100644
--- a/remus/server/detail/uuidHelper.h
+++ b/remus/server/detail/uuidHelper.h
@@ -17,10 +17,14 @@
 #include <boost/uuid/uuid.hpp>
 #include <boost/lexical_cast.hpp>
 //suppress warnings inside boost headers for gcc and clang
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/uuid/uuid_io.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <remus/proto/Message.h>
 
diff --git a/remus/testing/Testing.h b/remus/testing/Testing.h
index baabfc6..1871603 100644
--- a/remus/testing/Testing.h
+++ b/remus/testing/Testing.h
@@ -28,11 +28,15 @@
 #include <boost/uuid/uuid.hpp>
 
 //suppress warnings inside boost headers for gcc and clang
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/uuid/uuid_io.hpp>
 #include <boost/uuid/random_generator.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 namespace remus {
 namespace testing {
@@ -46,7 +50,7 @@ static char* full_character_set()
     {
     random_setup = true;
     //setup the random number generator
-    std::srand(std::time(0));
+    std::srand(static_cast<unsigned int>(std::time(0)));
     }
 
   static char charSet[256] =
diff --git a/remus/worker/Job.h b/remus/worker/Job.h
index cdb2a8c..dc99ff4 100644
--- a/remus/worker/Job.h
+++ b/remus/worker/Job.h
@@ -22,10 +22,14 @@
 
 #include <boost/uuid/uuid.hpp>
 //suppress warnings inside boost headers for gcc and clang
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/uuid/uuid_io.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 //The remus::worker::Job class.
 // For the server the Job object represents all the information required to
diff --git a/remus/worker/Worker.cxx b/remus/worker/Worker.cxx
index dc52723..d50fa69 100644
--- a/remus/worker/Worker.cxx
+++ b/remus/worker/Worker.cxx
@@ -53,11 +53,11 @@ Worker::Worker(remus::common::MeshIOType mtype,
   ConnectionInfo(conn),
   Zmq( new detail::ZmqManagement() ),
   MessageRouter( new remus::worker::detail::MessageRouter(conn,
-                    this->Zmq->InterWorkerContext,
+                    Zmq->InterWorkerContext,
                     zmq::socketInfo<zmq::proto::inproc>("worker"),
-                    zmq::socketInfo<zmq::proto::inproc>("worker_jobs")) ),
-  JobQueue( new remus::worker::detail::JobQueue( this->Zmq->InterWorkerContext,
-                    zmq::socketInfo<zmq::proto::inproc>("worker_jobs")) )
+                    zmq::socketInfo<zmq::proto::inproc>("worker_jobs"))),
+  JobQueue( new remus::worker::detail::JobQueue( Zmq->InterWorkerContext,
+                    zmq::socketInfo<zmq::proto::inproc>("worker_jobs")))
 {
   this->MessageRouter->start();
 
@@ -74,10 +74,10 @@ Worker::Worker(const remus::proto::JobRequirements& requirements,
   ConnectionInfo(),
   Zmq( new detail::ZmqManagement() ),
   MessageRouter( new remus::worker::detail::MessageRouter(conn,
-                    this->Zmq->InterWorkerContext,
+                    Zmq->InterWorkerContext,
                     zmq::socketInfo<zmq::proto::inproc>("worker"),
                     zmq::socketInfo<zmq::proto::inproc>("worker_jobs")) ),
-  JobQueue( new remus::worker::detail::JobQueue( this->Zmq->InterWorkerContext,
+  JobQueue( new remus::worker::detail::JobQueue( Zmq->InterWorkerContext,
                     zmq::socketInfo<zmq::proto::inproc>("worker_jobs")) )
 {
   this->MessageRouter->start();
diff --git a/remus/worker/detail/JobQueue.cxx b/remus/worker/detail/JobQueue.cxx
index 6963af7..f7519b6 100644
--- a/remus/worker/detail/JobQueue.cxx
+++ b/remus/worker/detail/JobQueue.cxx
@@ -16,10 +16,14 @@
 #include <remus/proto/JobSubmission.h>
 
 //suppress warnings inside boost headers for gcc and clang
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wshadow"
+#ifndef _MSC_VER
+  #pragma GCC diagnostic push
+  #pragma GCC diagnostic ignored "-Wshadow"
+#endif
 #include <boost/thread.hpp>
-#pragma GCC diagnostic pop
+#ifndef _MSC_VER
+  #pragma GCC diagnostic pop
+#endif
 
 #include <boost/thread/locks.hpp>
 
-- 
1.8.4.msysgit.0

